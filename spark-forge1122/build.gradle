buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'net.kyori.blossom' version '1.3.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

apply plugin: 'net.minecraftforge.gradle'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
}

configurations {
    shade
    implementation.extendsFrom shade
}

// https://github.com/MinecraftForge/ForgeGradle/issues/627#issuecomment-533927535
configurations.all {
    resolutionStrategy {
        force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    shade project(':spark-common')
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'pluginVersion': project.pluginVersion,
                'pluginDescription': project.pluginDescription
        )
    }
}

blossom {
    replaceTokenIn('src/main/java/me/lucko/spark/forge/Forge1122SparkMod.java')
    replaceToken '@version@', project.pluginVersion
}

shadowJar {
    archiveName = 'spark-forge1122.jar'
    configurations = [project.configurations.shade]

    relocate 'okio', 'me.lucko.spark.lib.okio'
    relocate 'okhttp3', 'me.lucko.spark.lib.okhttp3'
    relocate 'net.kyori.adventure', 'me.lucko.spark.lib.adventure'
    relocate 'net.kyori.examination', 'me.lucko.spark.lib.adventure.examination'
    relocate 'net.bytebuddy', 'me.lucko.spark.lib.bytebuddy'
    relocate 'org.tukaani.xz', 'me.lucko.spark.lib.xz'
    relocate 'com.google.protobuf', 'me.lucko.spark.lib.protobuf'
    relocate 'org.objectweb.asm', 'me.lucko.spark.lib.asm'
    relocate 'one.profiler', 'me.lucko.spark.lib.asyncprofiler'

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
}

artifacts {
    archives shadowJar
    shadow shadowJar
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.outputs.files.singleFile
    }
}
